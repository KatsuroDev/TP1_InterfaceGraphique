<Application x:Class="TP1_InterfaceGraphique.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TP1_InterfaceGraphique"
             StartupUri="Windows/LogIn.xaml">
    <Application.Resources>

        <Color x:Key="DarkColor">#2C2F33</Color>
        <Color x:Key="DarkerColor">#202124</Color>
        <Color x:Key="LightColor">White</Color>

        <Style x:Key="DarkWindow" TargetType="{x:Type Window}">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource DarkColor}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <ControlTemplate x:Key="LightButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="White" BorderThickness="4" SnapsToDevicePixels="True" CornerRadius="25" Padding="20, 10" Margin="5, 5">
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource LightColor}"/>
                </Border.Background>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource LightColor}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource LightColor}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="border" Value="Orange"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource LightColor}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource LightColor}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="DarkButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" TextBlock.Foreground="White" BorderBrush="White" BorderThickness="4" SnapsToDevicePixels="True" CornerRadius="25" Padding="20, 10" Margin="5, 5">
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource DarkColor}"/>
                </Border.Background>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DarkColor}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DarkColor}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="border" Value="Orange"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DarkColor}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource DarkColor}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="BaseLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>



        


        <ControlTemplate x:Key="InputBase" TargetType="{x:Type TextBoxBase}">
            <Border x:Name="border" BorderThickness="4" CornerRadius="15" MaxWidth="200" MinWidth="200" Padding="10, 0" SnapsToDevicePixels="True">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{StaticResource DarkerColor}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource DarkerColor}"/>
                </Border.Background>
                <ScrollViewer x:Name="PART_ContentHost" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="Gray"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="CaretBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="White"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="Orange"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="PwdBase" TargetType="{x:Type PasswordBox}">
            <Border x:Name="border" BorderThickness="4" CornerRadius="15" MaxWidth="200" MinWidth="200" Padding="10, 0" SnapsToDevicePixels="True">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{StaticResource DarkerColor}"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource DarkerColor}"/>
                </Border.Background>
                <ScrollViewer x:Name="PART_ContentHost" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="White"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="CaretBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="White"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="Orange"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <ControlTemplate x:Key="RadioButtonLeft" TargetType="{x:Type RadioButton}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="Transparent">
                <Border x:Name="radioButtonBorder" BorderBrush="White" BorderThickness="4" CornerRadius="15, 0, 0, 15">
                    <Border.Background>
                        <SolidColorBrush Color="{StaticResource DarkColor}"/>
                    </Border.Background>
                </Border>
                <ContentPresenter x:Name="contentPresenter" TextBlock.Foreground="White" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FF5593FF"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="Orange"/>
                    <!--<Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>-->
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" TargetName="radioButtonBorder">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource LightColor}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="Black"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="RadioButtonRight" TargetType="{x:Type RadioButton}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True" Background="Transparent">
            <Border x:Name="radioButtonBorder" BorderBrush="White" BorderThickness="4" CornerRadius="0, 15, 15, 0">
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource DarkColor}"/>
                </Border.Background>
            </Border>
            <ContentPresenter x:Name="contentPresenter" TextBlock.Foreground="White" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FF5593FF"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="Orange"/>
            </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" TargetName="radioButtonBorder">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource LightColor}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="Black"/>
            </Trigger>
        </ControlTemplate.Triggers>
        </ControlTemplate>

    </Application.Resources>
</Application>
 